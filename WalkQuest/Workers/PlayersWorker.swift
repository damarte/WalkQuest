//
//  PlayerWorker.swift
//  WalkQuest
//
//  Created by David on 1/3/17.
//  Copyright (c) 2017 damarte. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import Foundation

// MARK: - Players worker

class PlayersWorker
{
    var playersStore: PlayersStoreProtocol
    
    init(playersStore: PlayersStoreProtocol)
    {
        self.playersStore = playersStore
    }
    
    func fetchDevicePlayer(_ completionHandler: @escaping (_ player: Player?) -> Void) {
        playersStore.fetchDevicePlayer { (player: () throws -> Player?) -> Void in
            do {
                let player = try player()
                completionHandler(player)
            } catch {
                completionHandler(nil)
            }
            
        }
    }
}

// MARK: - Orders store API

protocol PlayersStoreProtocol
{
    func fetchDevicePlayer(_ completionHandler: @escaping (_ player: () throws -> Player?) -> Void)
}

// MARK: - Orders store CRUD operation errors

enum PlayersStoreError: Equatable, Error
{
    case cannotFetch(String)
}

func ==(lhs: PlayersStoreError, rhs: PlayersStoreError) -> Bool
{
    switch (lhs, rhs) {
    case (.cannotFetch(let a), .cannotFetch(let b)) where a == b: return true
    default: return false
    }
}
